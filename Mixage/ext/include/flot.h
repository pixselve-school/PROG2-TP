// -*- c++ -*-

#ifndef __FLOT__H__
#define __FLOT__H__

// spécification d'un flot d'échantillons

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	flot
///
/// \brief	Interface associee a un flot de donnees reliant deux composants du systeme. 
///
/// \author	Jean Christophe Engel, Fabrice Lamarche, University Of Rennes 1
/// \date	23/04/2010
////////////////////////////////////////////////////////////////////////////////////////////////////
class flot {
public :

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// \fn	virtual ~flot()
  /// \brief	Destructeur virtuel. 
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  virtual ~flot() {}

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// \fn	virtual void inserer(double echantillon) = 0
  /// \brief	Insertion d'un echantillon dans le flot. 
  /// \param	echantillon	L'echantillon a inserer dans le flot. 
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  virtual void inserer(double echantillon) = 0;

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// \fn	virtual double extraire() = 0
  /// \brief	Extraction de l'echantillon situe en tete du flot. 
  /// \pre	!vide()
  /// \return	L'echantillon en tete de flot. 
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  virtual double extraire() = 0;

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// \fn	virtual bool vide() const = 0
  /// \brief	Permet de savoir si le flot est vide ou non. 
  /// \return	Vrai si le flot est vide, faux sinon. 
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  virtual bool vide() const = 0;
};

#endif // __FLOT__H__
